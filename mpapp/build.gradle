apply plugin: 'com.android.application'

def getCreateTime() {
    def createTime = new Date().format("yyyyMMddHHmm", TimeZone.getTimeZone("GMT+08:00")).trim()
    return createTime
}

def getGitSHA() {
    def gitSHA = 'git rev-parse --short HEAD'.execute().text.trim()
    return gitSHA
}

def getGitCommitCount() {
    def gitCommitCount = 'git rev-list --count HEAD'.execute().text.trim();
    return gitCommitCount;
}

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"
    defaultConfig {
        applicationId "xinwei.com.mpapp"
        minSdkVersion 19
        targetSdkVersion 29
        versionCode gitCommitCount.toInteger()
        versionName "v1.0."+gitSHA+"."+createTime
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        externalNativeBuild {
            cmake {
                cppFlags ""
            }
        }
    }

    signingConfigs {
        release {
            keyAlias 'platform'
            keyPassword 'platformCootf'
            storeFile file('../cootelsign/platform.jks')
            storePassword 'platformCootf'
        }

        debug {
            keyAlias 'platform'
            keyPassword 'platformCootf'
            storeFile file('../cootelsign/platform.jks')
            storePassword 'platformCootf'
        }
    }

    buildTypes {
        release {
//            minifyEnabled true //混淆
//            zipAlignEnabled true//Zipalign优化
//            shrinkResources true// 移除无用的resource文件
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }

        debug {
            signingConfig signingConfigs.debug
        }
    }

    externalNativeBuild {
        cmake {
            path "src/main/cpp/CMakeLists.txt"
            version "3.10.2"
        }
    }

    applicationVariants.all { variant ->
        variant.outputs.all {
            def fileName
            if (variant.buildType.name.equals('release')) {
                fileName = "${applicationId}_release_${versionName}_${gitCommitCount}.apk"
            } else if (variant.buildType.name.equals('debug')) {
                fileName = "${applicationId}_debug_${versionName}_${gitCommitCount}.apk"
            }
            outputFileName = fileName;
        }
    }
}

dependencies {
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation project(path: ':commandlib')
}
